		/*JsonNode response = new CVrequest().search("Snotgirl");			
		System.out.println(response.toString());
		JsonNode response = new CVrequest().search("Snotgirl", 10, "character");
		System.out.println(response.toString());
		String[] fields = {"name","start_year","publisher","id","count_of_issues"};
		JsonNode response = new CVrequest().search("Snotgirl", "volume", 5, fields);
		System.out.println(response.toString());
		JSONObject jo = new JSONObject(response);
		System.out.println(response);*/
		
/*		Scanner in = new Scanner(System.in);
		System.out.println("Enter volume to search for");
		String input = in.nextLine();
		
		JsonNode volResp = new CVrequest().searchVolume(input);
		JSONArray volObj = volResp.getObject().getJSONArray("results");
		
		for(int i = 0; i < volObj.length(); i++){
			JSONObject jo = (JSONObject) volObj.get(i);
			//"name,start_year,publisher,id,count_of_issues"
			String name = jo.getString("name");
			String sYear = jo.getString("start_year");
			String pub = jo.getJSONObject("publisher").getString("name");
			int id = jo.getInt("id");
			int numIssues = jo.getInt("count_of_issues");
			System.out.println("name: " + name + "\tstart_year: " + sYear + "\tpublisher: " + pub 
								+ "\tid: " + id + "\tcount_of_issues: " + numIssues);
			
		}
		
		System.out.println("Enter volume id to search issues");
		 input = in.nextLine();
		 
		JsonNode response = new CVrequest().getVolumeIDs(input,1);
		//System.out.println(response);

		JSONArray ja = response.getObject().getJSONArray("results");
		//System.out.println(ja.toString());

		for(int i = 0; i < ja.length(); i++){

			JSONObject jo = (JSONObject) ja.get(i);
			JSONObject jImg = (JSONObject) jo.get("image");
			String name, issueNum;
			int id;
			if(jo.has("name")){
				name = jo.getString("name");
			} else name = "no name";
			if(jo.has("issue_number")){

				issueNum = jo.getString("issue_number");
			} else issueNum = "-1";
			
			if(jo.has("id")){
				id = jo.getInt("id");
			} else id = -1;
			System.out.println("issue#: " + issueNum + "\tid: " + id + "\t name: " + name); 
			System.out.println("icon_url: " + jImg.get("icon_url"));
			System.out.println("thumb_url: " + jImg.get("thumb_url"));
			System.out.println("tiny_url: " + jImg.get("tiny_url"));
			System.out.println("small_url: " + jImg.get("small_url"));
			System.out.println("super_url: " + jImg.get("super_url"));
			System.out.println("screen_url: " + jImg.get("screen_url"));
			System.out.println("medium_url: " + jImg.get("medium_url"));
			System.out.println("***************************END ISSUE**********************************\n\n");
		}*/
		
	---------------------------------------------
			JSONArray jaArray = new CVrequest().searchVolume("Snotgirl");//search for volume
		//System.out.println(jaArray.toString());
		JSONObject joImg = jaArray.getJSONObject(0).getJSONObject("image");
		System.out.println(joImg.toString());
		try {
			String urlStr = joImg.getString("medium_url");
			URL url = new URL(urlStr);
			HttpURLConnection conn = (HttpURLConnection) url.openConnection();
			conn.setRequestProperty(
				    "User-Agent",
				    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_5) AppleWebKit/537.31"
				    + "(KHTML, like Gecko) Chrome/26.0.1410.65 Safari/537.31");
			Image img = ImageIO.read(conn.getInputStream());
			
			JDialog dialog = new JDialog();
			//dialog.setUndecorated(true);
			JLabel label = new JLabel((Icon) new ImageIcon(img));
			dialog.add(label);
			dialog.pack();
			dialog.setVisible(true);
			
		} catch (JSONException | IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		*********************************SQL LocalDB***************************************
		
		public class Test {
    public static void main(String[] args) throws Exception {
       // Class.forName("org.sqlite.JDBC");
        String url = "jdbc:sqlite:./DigLongBox.db";
        Connection conn = DriverManager.getConnection(url);
        Statement stat = conn.createStatement();
        stat.executeUpdate("drop table if exists people;");
        stat.executeUpdate("create table people (name, occupation);");
        PreparedStatement prep = conn.prepareStatement(
            "insert into people values (?, ?);");

        prep.setString(1, "Gandhi");
        prep.setString(2, "politics");
        prep.addBatch();
        prep.setString(1, "Turing");
        prep.setString(2, "computers");
        prep.addBatch();
        prep.setString(1, "Wittgenstein");
        prep.setString(2, "smartypants");
        prep.addBatch();

        conn.setAutoCommit(false);
        prep.executeBatch();
        conn.setAutoCommit(true);

        ResultSet rs = stat.executeQuery("select * from people;");
        while (rs.next()) {
            System.out.println("name = " + rs.getString("name"));
            System.out.println("job = " + rs.getString("occupation"));
        }
        rs.close();
        conn.close();
    }
  }
  
  ****************database add issue *************************************
  
			//			String value = "";
			//			for(String s: names){
			//				switch(s){
			//				case "image":
			//					JSONObject imgJO = jo.getJSONObject(s);
			//					String imgNames[] = JSONObject.getNames(imgJO);
			//					
			//					for(String curr: imgNames){
			//						value = imgJO.getString(curr);
			//						String sql = "UPDATE issue SET " + curr + " = ? WHERE id = " + id + ";";
			//						PreparedStatement pre = conn.prepareStatement(sql);
			//						pre.setString(1, value);
			//						pre.executeUpdate();
			//					}
			//					break;
			//
			//				default:
			//					if(jo.isNull(s))
			//						break;
			//					
			//					value = jo.get(s).toString();
			//					//String sql = "UPDATE issue SET " + s + " = ? WHERE id = " + id + ";";
			//					//PreparedStatement pre = conn.prepareStatement(sql);
			//					//pre.setString(1, value);
			//					//pre.executeUpdate();
			//					break;
			//				}
			//			}
**********************************************************

//	public static boolean setIssueImage(String id, BufferedImage bi, String size){
//		//img = ImageIO.read(ImageIO.createImageInputStream(conn.getInputStream()));
//		String ext = "png";
//		File dir = new File("./images/issue/");
//		String name = String.format("%s.%s", RandomStringUtils.randomAlphanumeric(12), ext);
//		File file = new File(dir, name);
//
//		try {
//			ImageIO.write(bi, "png", file);
//		} catch (IOException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
//
//		String col = size;
//
//		if(size.contains("_url"))
//			col = size.replace("_url", "");
//
//		String str = "UPDATE issue SET "+ col + " ='./Images/issue/" + name +"' WHERE id='" + id + "';";
//
//		System.out.println(str);
//		return LocalDB.executeUpdate(str);
//	}
*****************************************************************************


	